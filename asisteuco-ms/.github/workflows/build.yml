# Nombre del workflow que aparecerá en la pestaña Actions de GitHub
name: SonarQube Analysis for asisteuco-ms

# Configuración de cuándo se disparará el workflow
on:
  push:
    branches:
      - main # Asegúrate que 'main' sea tu rama principal. Si es 'master', cámbialo.
    paths: # Opcional: Ejecutar solo si hay cambios en el proyecto específico
      - 'asisteuco-ms/**'
  pull_request:
    types: [opened, synchronize, reopened]
    paths: # Opcional: Ejecutar solo si hay cambios en el proyecto específico
      - 'asisteuco-ms/**'

jobs:
  build_and_analyze_asisteuco: # Nombre único para el job
    name: Build and Analyze (asisteuco-ms)
    runs-on: ubuntu-latest

    # Define el directorio de trabajo por defecto para todos los pasos de este job.
    # Esto es útil si todo el job se centra en un subdirectorio.
    # Alternativamente, puedes usar 'cd asisteuco-ms' en el paso 'run' específico.
    defaults:
      run:
        working-directory: ./asisteuco-ms # Ejecuta comandos desde este subdirectorio

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para un análisis preciso de SonarQube

      - name: Set up JDK 23 # O la versión que necesite tu proyecto, ej: 17, 21
        uses: actions/setup-java@v4
        with:
          java-version: '23' # Cambia si es necesario (ej. '17')
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          # La ruta es relativa al directorio raíz del runner, no al working-directory del job.
          # Por lo tanto, no necesita prefijo si el working-directory está definido a nivel de job.
          # Si no usas defaults.run.working-directory, y el .sonar está en asisteuco-ms/.sonar,
          # entonces path sería: asisteuco-ms/.sonar/cache
          path: ~/.sonar/cache # Caché global de Sonar
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          # Similar a SonarQube cache, la ruta es global.
          # Si el .m2 está en asisteuco-ms/.m2, entonces path sería: asisteuco-ms/.m2
          path: ~/.m2 # Caché global de Maven
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }} # Considera 'asisteuco-ms/pom.xml' si hay varios poms
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Necesario para análisis de PRs
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Asegúrate que el secret en GitHub se llame SONAR_TOKEN
        # El comando 'mvn' se ejecutará dentro de 'asisteuco-ms/' debido a 'defaults.run.working-directory'
        # Si no usaste 'defaults.run.working-directory', el comando sería:
        # run: |
        #   cd asisteuco-ms
        #   mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
        #     -Dsonar.projectKey=JZuluf_AsisteUco \
        #     -Dsonar.organization=jzuluf \
        #     -Dsonar.sources=src # Opcional, si tus fuentes están en 'src/' relativo a pom.xml
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=JZuluf_AsisteUco \
            -Dsonar.organization=jzuluf \
            -Dsonar.sources=src # Opcional: si tus fuentes están en 'src/' dentro de asisteuco-ms/
                                # SonarScanner para Maven usualmente detecta 'src/main/java' automáticamente.
                                # Puedes quitarlo si no es necesario o causa problemas.
